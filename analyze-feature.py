import sys

if len(sys.argv) < 5:
    print "Display documents close to a selected feature"
    print "Usage: " + sys.argv[0] + " <corpus_file> <feature_file> <tag_file> <feature>"
    print "    <corpus_file>: File used as doc2feat input ('-train <corpus_file>')"
    print "    <feature_file>: Features generated by doc2feat ('-features <feature_file>')"
    print "    <tag_file>: Features generated by doc2feat ('-output <tag_file>')"
    print "    <feature>: The selected feature number"
    print "Sparse doc2feat output is expected ('-sparse 1')"
    print "Example: " + sys.argv[0] + " docset.txt features.txt tags.txt 5"
    exit()
corpus_file = str(sys.argv[1])
feature_file = str(sys.argv[2])
tag_file = str(sys.argv[3])
feature_num = str(sys.argv[4])

feature_found = False

print "Corpus file: " + corpus_file
print "Feature file: " + feature_file
print "Tag file: " + tag_file + "\n"
print "Feature " + feature_num + " analyzed:"
with open(feature_file, "r") as feature:
    for line in feature:
        if feature_found:
            if line == '\n': break
            print line[:len(line) - 1]
        else: feature_found = (line == "Feature " + feature_num + '\n')
print ""

doc_cnt = 0
with open(tag_file) as tag:
    with open(corpus_file) as corpus:
        for line_c in corpus:
            line_t = tag.readline()
            if line_t != "Document " + str(doc_cnt) + "\n":
                print "Current document number (" + str(doc_cnt) + ") doesn't match the line read:"
                print "Expected: 'Document " + str(doc_cnt) + "'"
                print "Found: '" + line_t + "'"
                exit()
            line_t = tag.readline()
            pos = line_t.find(" " + feature_num + " ")
            if pos != -1: # Feature found
                line_t = line_t[pos + len(feature_num) + 2:]
                distance = line_t[:line_t.find(" ")]
                if float(distance) > 0.5:
                    print "Document " + str(doc_cnt) + "; distance to feature: " + distance
                    print line_c
            doc_cnt = doc_cnt + 1

exit()
# 
totals = [0] * 200
vector = [0.0] * 200
match = [0] * 200
with open("/home/tomek/w2v/forpaper/UCI-200-tagged.csv", "r") as fi:
    for line in fi:
      pos = line.find(";")
      #print line[:pos]
      #w = raw_input("")
      sentiment = int(line[:pos])
      line = line[pos+1:]
      for i in range(200):
        pos = line.find(";")
        vector[i] = float(line[:pos])
        line = line[pos+1:]
      for i in range (200):
        if vector[i] > 0.3:
          totals[i] = totals[i] + 1
          if sentiment == 1:
            match[i] = match[i] + 1
for i in range(200):
  #if totals[i] > 300: # 10%
    if float(match[i])/totals[i] > 0.8:
      print "Positive: ", i, totals[i], float(match[i])/totals[i]
    if float(match[i])/totals[i] < 0.209:
      print "Negative: ", i, totals[i], float(match[i])/totals[i]
